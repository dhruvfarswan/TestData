// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DatacomTest.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DatacomScenariosLogin")]
    public partial class DatacomScenariosLoginFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "Login.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "DatacomScenariosLogin", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Navigate to the error page")]
        [NUnit.Framework.TestCaseAttribute("chrome", null)]
        [NUnit.Framework.TestCaseAttribute("edge", null)]
        public void NavigateToTheErrorPage(string browser, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navigate to the error page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "BrowserName",
                            "Url"});
                table1.AddRow(new string[] {
                            string.Format("{0}", browser),
                            "https://qa-practice.netlify.app/bugs-form"});
#line 5
 testRunner.Given("I navigate to the homepage with the below envrionment", ((string)(null)), table1, "Given ");
#line hidden
#line 8
 testRunner.Then("Error Home page should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify the Last Name is trimmed after regirstration")]
        [NUnit.Framework.TestCaseAttribute("chrome", null)]
        [NUnit.Framework.TestCaseAttribute("edge", null)]
        public void VerifyTheLastNameIsTrimmedAfterRegirstration(string browser, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Last Name is trimmed after regirstration", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 15
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "BrowserName",
                            "Url"});
                table2.AddRow(new string[] {
                            string.Format("{0}", browser),
                            "https://qa-practice.netlify.app/bugs-form"});
#line 16
 testRunner.Given("I navigate to the homepage with the below envrionment", ((string)(null)), table2, "Given ");
#line hidden
#line 19
 testRunner.Then("Error Home page should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "PhoneNumber",
                            "Country",
                            "EmailAddress",
                            "Password"});
                table3.AddRow(new string[] {
                            "Johnny",
                            "Bravo",
                            "\"8109090091\"",
                            "New Zealand",
                            "abc@gmail.com",
                            "Pwdqwe"});
#line 20
 testRunner.And("I Enter all the form details", ((string)(null)), table3, "And ");
#line hidden
#line 23
 testRunner.And("I click on Register button on Error Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.Then("I verify the Success message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
 testRunner.Then("Verify Last Name is trimmed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify the Phone Number is last digit is one greater than actual phone number aft" +
            "er regirstration")]
        [NUnit.Framework.TestCaseAttribute("chrome", null)]
        [NUnit.Framework.TestCaseAttribute("edge", null)]
        public void VerifyThePhoneNumberIsLastDigitIsOneGreaterThanActualPhoneNumberAfterRegirstration(string browser, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Phone Number is last digit is one greater than actual phone number aft" +
                    "er regirstration", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 32
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "BrowserName",
                            "Url"});
                table4.AddRow(new string[] {
                            string.Format("{0}", browser),
                            "https://qa-practice.netlify.app/bugs-form"});
#line 33
 testRunner.Given("I navigate to the homepage with the below envrionment", ((string)(null)), table4, "Given ");
#line hidden
#line 36
 testRunner.Then("Error Home page should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "PhoneNumber",
                            "Country",
                            "EmailAddress",
                            "Password"});
                table5.AddRow(new string[] {
                            "Johnny",
                            "Bravo",
                            "\"8109090091\"",
                            "New Zealand",
                            "abc@gmail.com",
                            "Pwdqwe"});
#line 37
 testRunner.And("I Enter all the form details", ((string)(null)), table5, "And ");
#line hidden
#line 40
 testRunner.And("I click on Register button on Error Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.Then("I verify the Success message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 42
 testRunner.Then("Verify Phone Number is incremented by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify the Last Name field is required")]
        [NUnit.Framework.TestCaseAttribute("chrome", null)]
        [NUnit.Framework.TestCaseAttribute("edge", null)]
        public void VerifyTheLastNameFieldIsRequired(string browser, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the Last Name field is required", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 49
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "BrowserName",
                            "Url"});
                table6.AddRow(new string[] {
                            string.Format("{0}", browser),
                            "https://qa-practice.netlify.app/bugs-form"});
#line 50
 testRunner.Given("I navigate to the homepage with the below envrionment", ((string)(null)), table6, "Given ");
#line hidden
#line 53
 testRunner.Then("Error Home page should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "PhoneNumber",
                            "Country",
                            "EmailAddress",
                            "Password"});
                table7.AddRow(new string[] {
                            "Johnny",
                            "",
                            "\"8109090091\"",
                            "New Zealand",
                            "abc@gmail.com",
                            "Pwdqwe"});
#line 54
 testRunner.And("I Enter all the form details", ((string)(null)), table7, "And ");
#line hidden
#line 57
 testRunner.And("I click on Register button on Error Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.Then("I verify the Success message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 59
 testRunner.Then("Verify Last Name field is not blank", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Password length field is between six and twenty characters")]
        [NUnit.Framework.TestCaseAttribute("chrome", null)]
        [NUnit.Framework.TestCaseAttribute("edge", null)]
        public void VerifyPasswordLengthFieldIsBetweenSixAndTwentyCharacters(string browser, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Password length field is between six and twenty characters", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 66
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                            "BrowserName",
                            "Url"});
                table8.AddRow(new string[] {
                            string.Format("{0}", browser),
                            "https://qa-practice.netlify.app/bugs-form"});
#line 67
 testRunner.Given("I navigate to the homepage with the below envrionment", ((string)(null)), table8, "Given ");
#line hidden
#line 70
 testRunner.Then("Error Home page should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "PhoneNumber",
                            "Country",
                            "EmailAddress",
                            "Password"});
                table9.AddRow(new string[] {
                            "Johnny",
                            "Depp",
                            "\"8109090091\"",
                            "New Zealand",
                            "abc@gmail.com",
                            "Fivee"});
#line 71
 testRunner.And("I Enter all the form details", ((string)(null)), table9, "And ");
#line hidden
#line 74
 testRunner.And("I click on Register button on Error Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.Then("Verify Password length field is between six and twenty characters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Phone Number field is atleast 10 characters")]
        [NUnit.Framework.TestCaseAttribute("chrome", null)]
        [NUnit.Framework.TestCaseAttribute("edge", null)]
        public void VerifyPhoneNumberFieldIsAtleast10Characters(string browser, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Phone Number field is atleast 10 characters", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 82
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "BrowserName",
                            "Url"});
                table10.AddRow(new string[] {
                            string.Format("{0}", browser),
                            "https://qa-practice.netlify.app/bugs-form"});
#line 83
 testRunner.Given("I navigate to the homepage with the below envrionment", ((string)(null)), table10, "Given ");
#line hidden
#line 86
 testRunner.Then("Error Home page should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "FirstName",
                            "LastName",
                            "PhoneNumber",
                            "Country",
                            "EmailAddress",
                            "Password"});
                table11.AddRow(new string[] {
                            "Johnny",
                            "Depp",
                            "\"81090\"",
                            "New Zealand",
                            "abc@gmail.com",
                            "Fivee"});
#line 87
 testRunner.And("I Enter all the form details", ((string)(null)), table11, "And ");
#line hidden
#line 90
 testRunner.And("I click on Register button on Error Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 91
 testRunner.Then("Verify Phone Number field length is atleast ten characters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
